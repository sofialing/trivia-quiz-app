{"version":3,"sources":["modules/categories.js","components/QuizCategories.js","components/StartQuiz.js","components/AnswerOptions.js","components/Question.js","components/Spinner.js","components/Quiz.js","components/ResultAnswers.js","components/Result.js","App.js","index.js"],"names":["categories","id","name","QuizCategories","state","startQuiz","handleOnSubmit","e","preventDefault","setState","handleChange","target","value","options","selectedIndex","innerHTML","redirectObj","pathname","this","category","map","key","to","className","onSubmit","aria-label","onChange","defaultValue","type","Component","StartGame","AnswerOptions","answer","checkAnswer","res","correct","props","onHandleResult","onInputChange","checkboxes","index","checked","htmlFor","Parser","Question","question","incorrect_answers","correct_answer","sort","Math","random","number","Spinner","role","Quiz","loaded","questions","current","score","quizOver","getQuestions","location","url","axios","get","then","response","data","results","user_answer","catch","error","console","handleResult","prevState","saveUserAnswer","showNextQuestion","i","updatedQuestions","length","result","ResultAnswers","showAnswers","answers","item","Result","useState","setShowAnswers","newGame","setNewGame","onClick","App","exact","path","component","StartQuiz","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c182edd9.chunk.js","sourcesContent":["const categories = [\n\t{ id: 27, name: 'Animals' },\n\t{ id: 10, name: 'Books' },\n\t{ id: 11, name: 'Film' },\n\t{ id: 9, name: 'General knowledge' },\n\t{ id: 22, name: 'Geography' },\n\t{ id: 23, name: 'History' },\n\t{ id: 12, name: 'Music' },\n\t{ id: 17, name: 'Science & nature' },\n\t{ id: 21, name: 'Sports' },\n\t{ id: 15, name: 'Video Games' }\n]\n\nexport default categories\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport categories from '../modules/categories'\n\nclass QuizCategories extends Component {\n\tstate = {\n\t\tname: '',\n\t\tid: '',\n\t\tstartQuiz: false\n\t}\n\n\thandleOnSubmit = e => {\n\t\te.preventDefault()\n\t\tif (this.state.id) {\n\t\t\tthis.setState({ startQuiz: true })\n\t\t}\n\t}\n\n\thandleChange = e => {\n\t\tconst { value, options, selectedIndex } = e.target\n\t\tthis.setState({\n\t\t\tname: options[selectedIndex].innerHTML,\n\t\t\tid: value\n\t\t})\n\t}\n\n\trender() {\n\t\tconst redirectObj = {\n\t\t\tpathname: '/quiz',\n\t\t\tstate: { id: this.state.id, category: this.state.name }\n\t\t}\n\n\t\tconst options = categories.map(category => (\n\t\t\t<option value={category.id} key={category.id}>\n\t\t\t\t{category.name}\n\t\t\t</option>\n\t\t))\n\n\t\treturn this.state.startQuiz ? (\n\t\t\t<Redirect to={redirectObj} />\n\t\t) : (\n\t\t\t<form className='input-group' onSubmit={this.handleOnSubmit}>\n\t\t\t\t<select\n\t\t\t\t\tclassName='custom-select'\n\t\t\t\t\taria-label='Choose a quiz category'\n\t\t\t\t\tonChange={this.handleChange}>\n\t\t\t\t\t<option defaultValue>Choose a category...</option>\n\t\t\t\t\t{options}\n\t\t\t\t</select>\n\t\t\t\t<div className='input-group-append'>\n\t\t\t\t\t<button className='btn btn-primary' type='submit'>\n\t\t\t\t\t\tStart quiz\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default QuizCategories\n","import React from 'react'\nimport QuizCategories from './QuizCategories'\n\nconst StartGame = () => {\n\treturn (\n\t\t<section id='start' className='text-white text-center mb-5 container'>\n\t\t\t<h1 className='display-3 font-weight-bold'>Trivia Quiz</h1>\n\t\t\t<p className='lead mb-5'>\n\t\t\t\tAre you a trivia master? Do you know a little about a lot? Put your skills\n\t\t\t\tto the test and see how much you really know with this quiz! Choose a\n\t\t\t\tcategory in which to play the Trivia Quiz from General Knowledge, Animals,\n\t\t\t\tEntertainment, Geography and many more.\n\t\t\t</p>\n\t\t\t<QuizCategories />\n\t\t</section>\n\t)\n}\n\nexport default StartGame\n","import React, { Component } from 'react'\nimport Parser from 'html-react-parser'\n\nclass AnswerOptions extends Component {\n\tstate = {\n\t\tanswer: ''\n\t}\n\n\tcheckAnswer = e => {\n\t\te.preventDefault()\n\t\tif (!this.state.answer) {\n\t\t\treturn\n\t\t}\n\t\tconst res = {\n\t\t\tcorrect: this.state.answer === this.props.correct,\n\t\t\tanswer: this.state.answer\n\t\t}\n\t\tthis.setState({ answer: '' })\n\t\tthis.props.onHandleResult(res)\n\t}\n\n\tonInputChange = e => {\n\t\tthis.setState({ answer: e.target.value })\n\t}\n\n\trender() {\n\t\tconst checkboxes = this.props.options.map((answer, index) => (\n\t\t\t<div className='custom-control custom-radio' key={index}>\n\t\t\t\t<input\n\t\t\t\t\ttype='radio'\n\t\t\t\t\tid={answer}\n\t\t\t\t\tname={answer}\n\t\t\t\t\tclassName='custom-control-input'\n\t\t\t\t\tvalue={answer}\n\t\t\t\t\tonChange={this.onInputChange}\n\t\t\t\t\tchecked={this.state.answer === answer}\n\t\t\t\t/>\n\t\t\t\t<label className='custom-control-label' htmlFor={answer}>\n\t\t\t\t\t{Parser(answer)}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t))\n\n\t\treturn (\n\t\t\t<form onSubmit={this.checkAnswer}>\n\t\t\t\t<div className='mb-4'>{checkboxes}</div>\n\t\t\t\t<button className='btn btn-secondary' type='submit'>\n\t\t\t\t\tNext question\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default AnswerOptions\n","import React from 'react'\nimport Parser from 'html-react-parser'\nimport AnswerOptions from './AnswerOptions'\n\nconst Question = props => {\n\tconst { question, incorrect_answers, correct_answer } = props.question\n\tconst options = [...incorrect_answers, correct_answer]\n\toptions.sort(() => 0.5 - Math.random())\n\n\treturn (\n\t\t<section className='container'>\n\t\t\t<div className='card mb-5 shadow-sm'>\n\t\t\t\t<div className='card-body'>\n\t\t\t\t\t<h2 className='card-title text-muted'>\n\t\t\t\t\t\t{props.category} Quiz | Question {props.number}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<h3 className='card-subtitle mb-3'>{Parser(question)}</h3>\n\t\t\t\t\t<AnswerOptions\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tcorrect={correct_answer}\n\t\t\t\t\t\tonHandleResult={props.onHandleResult}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n\nexport default Question\n","import React from 'react'\n\nconst Spinner = () => {\n\treturn (\n\t\t<div className='d-flex justify-content-center'>\n\t\t\t<div className='spinner-border text-white' role='status'>\n\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Spinner\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport Question from './Question'\nimport Spinner from './Spinner'\n\nclass Quiz extends Component {\n\tstate = {\n\t\tloaded: false,\n\t\tquestions: [],\n\t\tcurrent: 0,\n\t\tscore: 0,\n\t\tquizOver: false\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getQuestions()\n\t}\n\n\tgetQuestions = () => {\n\t\tconst id = this.props.location.state ? this.props.location.state.id : 9\n\t\tconst url = `https://opentdb.com/api.php?amount=3&category=${id}&difficulty=easy&type=multiple`\n\t\taxios\n\t\t\t.get(url)\n\t\t\t.then(response => {\n\t\t\t\tconst questions = response.data.results.map(data => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tquestion: data.question,\n\t\t\t\t\t\tcorrect_answer: data.correct_answer,\n\t\t\t\t\t\tincorrect_answers: data.incorrect_answers,\n\t\t\t\t\t\tuser_answer: '',\n\t\t\t\t\t\tcorrect: ''\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.setState({ loaded: true, questions: questions })\n\t\t\t})\n\t\t\t.catch(error => console.error(error))\n\t}\n\n\thandleResult = res => {\n\t\tif (res.correct) {\n\t\t\tthis.setState(prevState => ({ score: prevState.score + 1 }))\n\t\t}\n\t\tthis.saveUserAnswer(res)\n\t\tthis.showNextQuestion()\n\t}\n\n\tsaveUserAnswer = res => {\n\t\tconst i = this.state.current\n\t\tconst { correct, answer } = res\n\t\tconst updatedQuestions = [...this.state.questions]\n\t\tupdatedQuestions[i] = {\n\t\t\t...updatedQuestions[i],\n\t\t\tuser_answer: answer,\n\t\t\tcorrect: correct\n\t\t}\n\t\tthis.setState({ questions: updatedQuestions })\n\t}\n\n\tshowNextQuestion = () => {\n\t\tif (this.state.current === this.state.questions.length - 1) {\n\t\t\tthis.setState({ quizOver: true })\n\t\t\treturn\n\t\t}\n\t\tthis.setState(prevState => ({ current: prevState.current + 1 }))\n\t}\n\n\trender() {\n\t\tconst { current, questions, quizOver, loaded, score } = this.state\n\t\tconst category = this.props.location.state\n\t\t\t? this.props.location.state.category\n\t\t\t: 'General knowledge'\n\t\tconst redirectObj = {\n\t\t\tpathname: '/result',\n\t\t\tstate: { result: { questions, score } }\n\t\t}\n\n\t\tif (quizOver) {\n\t\t\treturn <Redirect to={redirectObj} />\n\t\t}\n\n\t\treturn loaded ? (\n\t\t\t<Question\n\t\t\t\tquestion={questions[current]}\n\t\t\t\tnumber={current + 1}\n\t\t\t\tonHandleResult={this.handleResult}\n\t\t\t\tcategory={category}\n\t\t\t/>\n\t\t) : (\n\t\t\t<Spinner />\n\t\t)\n\t}\n}\n\nexport default Quiz\n","import React from 'react'\nimport Parser from 'html-react-parser'\n\nconst ResultAnswers = props => {\n\tconst { showAnswers, questions } = props\n\tconst answers = questions.map((item, i) => (\n\t\t<li className='list-group-item' key={i}>\n\t\t\t<span className='d-block font-weight-bold'>{Parser(item.question)}</span>\n\t\t\t{item.correct ? (\n\t\t\t\t<span className='d-block'>\n\t\t\t\t\tYour answer: {Parser(item.user_answer)} is correct.\n\t\t\t\t</span>\n\t\t\t) : (\n\t\t\t\t<span className='d-block'>\n\t\t\t\t\tYour answer: {Parser(item.user_answer)} is incorrect. Correct answer\n\t\t\t\t\tis {Parser(item.correct_answer)}.\n\t\t\t\t</span>\n\t\t\t)}\n\t\t</li>\n\t))\n\n\treturn showAnswers ? (\n\t\t<ul className='list-group list-group-flush mt-4'>{answers}</ul>\n\t) : (\n\t\t''\n\t)\n}\n\nexport { ResultAnswers }\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { ResultAnswers as Answers } from './ResultAnswers'\n\nconst Result = props => {\n\tconst [showAnswers, setShowAnswers] = useState(false)\n\tconst [newGame, setNewGame] = useState(false)\n\n\tif (!props.location.state) {\n\t\treturn <Redirect to='/' />\n\t}\n\n\tconst { questions, score } = props.location.state.result\n\n\tconst toggleAnswers = () => {\n\t\tsetShowAnswers(!showAnswers)\n\t}\n\n\treturn newGame ? (\n\t\t<Redirect to='/' />\n\t) : (\n\t\t<section className='container'>\n\t\t\t<div className='card mb-5 shadow-sm'>\n\t\t\t\t<div className='card-body'>\n\t\t\t\t\t<h2 className='card-title'>\n\t\t\t\t\t\tCongratulations! You have completed the quiz.\n\t\t\t\t\t</h2>\n\t\t\t\t\t<h3 className='card-subtitle mb-3'>\n\t\t\t\t\t\tYou got {score} out of {questions.length} questions right.\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<button className='btn btn-secondary mr-2' onClick={toggleAnswers}>\n\t\t\t\t\t\tShow answers\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn btn-secondary'\n\t\t\t\t\t\tonClick={() => setNewGame(true)}>\n\t\t\t\t\t\tStart new quiz\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<Answers showAnswers={showAnswers} questions={questions} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n\nexport default Result\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport StartQuiz from './components/StartQuiz'\nimport Quiz from './components/Quiz'\nimport Result from './components/Result'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={StartQuiz}></Route>\n\t\t\t\t\t<Route path='/quiz' component={Quiz}></Route>\n\t\t\t\t\t<Route path='/result' component={Result}></Route>\n\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t)\n\t}\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}